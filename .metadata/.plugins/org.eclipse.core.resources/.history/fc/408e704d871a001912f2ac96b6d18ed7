package main.course.oop.tictactoe.util;
import java.lang.StringBuilder;
import java.lang.IllegalArgumentException;

/**
 * You must implement the following methods to accept the expected 
 * parameters and return accurate results.
 * You are allowed and expected to add any class attributes and methods 
 * needed to complete this assignment. 
 * 
 *
 */
public class TwoDArray {
	
	private int[][] arr;
	private int defaultVal;
	
	public TwoDArray(int rows, int cols, int defaultVal){
		this.arr = new int[rows][cols];
		this.defaultVal = defaultVal;
		initArray(defaultVal);
	}
	
	public void initArray(int defaultVal) {
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				arr[i][j] = defaultVal;
			}
		}
	}
	
	public String insertInt(int row, int col, int val) {
		/*TODO - "Insert" based on the following conditions:
		 * 1. The location [row][col] is still set to the default value
		 * 		-return "Success! (val) was inserted.
		 * 
		 * 2. The location [row][col] is no longer the default value
		 * 		-return "Failure: (row), (col) is not empty.
		 * 
		 * 3. val is not the default value; 
		 * 		-return "Failure: (val) is not allowed."
		 * 
		 * Note: Print the int value in place of (). 
		 * e.g., replace (val) with val.
		 */
		return "Not implemented";
	}
	
	public int getInt(int row, int col) {
		if (row >= 0 && row < arr.length && col >= 0 && col < arr[row].length) {
			return arr[row][col];
		}
		else throw new IllegalArgumentException();
	}
	
	public String getArrayDisplay() {
		StringBuilder representation = new StringBuilder();
		StringBuilder line;
		for (int i = 0; i < arr.length; i++) {
			line = new StringBuilder();
			for (int j = 0; j < arr[i].length; j++) {
				line.append(arr[i][j]);
				line.append(" ");
			}
			//remove the last space from the line
			line.delete(line.length()-2,line.length());
			representation.append(line);
			representation.append(System.lineSeparator());
		}
		//remove the last newline from the representation of the array
		int seperatorLength = System.lineSeparator().length();
		representation.delete(representation.length()-seperatorLength,representation.length());
		return representation.toString();
	}
	
	public String getArrayDetails() {
		/*TODO - List the following:
		 * # rows
		 * # columns
		 * How many unique values (in the above example, this would be 2
		 * Value and count of each (e.g. 
		 * 			value:1 count:5
		 * 			value:0 count:4
		 * 
		 * 			)
		 * 
		 */
		
		return "Not implemented";
	}
}

package course.oop.main;

import java.util.Scanner;

import course.oop.controller.*;

public class TTTDriver {

	private static void checkForInvalidLocation(boolean isSelectionValid) {
		if(!isSelectionValid) {
			System.out.println("Invalid location selected by player");
		}
	}
	
	public static void sampleTestCase() {
		TTTControllerImpl ticTacToe = new TTTControllerImpl();
		String player_1 = "Ashley";
		String player_2 = "James";
		ticTacToe.createPlayer(player_1, "O", 1);
		ticTacToe.createPlayer(player_2, "X", 2);
		boolean isSelectionValid = true;
		
		// initialize
		ticTacToe.startNewGame(2, 0);
		System.out.println(ticTacToe.getGameDisplay());
		
		//play game
		isSelectionValid = ticTacToe.setSelection(0, 0, 2);
		checkForInvalidLocation(isSelectionValid);
		System.out.println(ticTacToe.getGameDisplay());
		isSelectionValid = ticTacToe.setSelection(0, 2, 1);
		checkForInvalidLocation(isSelectionValid);
		System.out.println(ticTacToe.getGameDisplay());
		isSelectionValid = ticTacToe.setSelection(1, 0, 2);
		checkForInvalidLocation(isSelectionValid);
		System.out.println(ticTacToe.getGameDisplay());
		isSelectionValid = ticTacToe.setSelection(1, 2, 1);
		checkForInvalidLocation(isSelectionValid);
		System.out.println(ticTacToe.getGameDisplay());
		isSelectionValid = ticTacToe.setSelection(2, 0, 2);
		checkForInvalidLocation(isSelectionValid);
		System.out.println(ticTacToe.getGameDisplay());
		
		isSelectionValid = ticTacToe.setSelection(1, 1, 2);
		checkForInvalidLocation(isSelectionValid);
		System.out.println(ticTacToe.getGameDisplay());
		
		//determine winner
		int winner = ticTacToe.determineWinner();
		if(winner==2) {
			System.out.println(player_2 + " won the game!!");
		}else {
			System.out.println("Failed Test Case");
		}
	}
	
	public static void myMain() {
		Scanner sc = new Scanner(System.in);
		String outsideOfGameChoices = "1. Set player 1.\n"
									+ "2. Set player 2.\n"
									+ "3. Start new game.\n"
									+ "4. Quit the program.\n"
									+ "Input the number of the choice that you desire.";
		String inGameOptions = "1. Play turn.\n"
							 + "2. Reset Game.\n"
							 + "3. Quit Game.";
		String choice, marker, username;
		TTTControllerImpl ticTacToe = new TTTControllerImpl();;
		
		
		System.out.println("Welcome to Tic Tac Toe! Please read the following prompt and select a choice from the menu.\nThe choices are as follows:");
		while (true) {
			System.out.println(outsideOfGameChoices);
			System.out.print("choice: ");
			choice = sc.nextLine();
			if (choice.equals("1")) {
				System.out.println("Please input Player 1's username on the first line and their marker on the second line. Note that their username can consist of any alphanumeric characters of any length. Their marker must consist of only ONE alphanumeric character.");
				System.out.print("username: ");
				username = sc.nextLine();
				System.out.print("marker: ");
				marker = sc.nextLine();
				ticTacToe.createPlayer(username, marker, 1);
			}
			else if (choice.equals("2")) {
				System.out.println("Please input Player 2's username on the first line and their marker on the second line. Note that their username can consist of any alphanumeric characters of any length. Their marker must consist of only ONE alphanumeric character.");
				System.out.print("username: ");
				username = sc.nextLine();
				System.out.print("marker: ");
				marker = sc.nextLine();
				ticTacToe.createPlayer(username, marker, 2);
			}
			else if (choice.equals("3")) {
				ticTacToe.startNewGame(2, 0);
				boolean isSelectionValid, player1Turn = true;
				int row, col;
				while (true) {
					System.out.println(ticTacToe.getGameDisplay());
					System.out.println(inGameOptions);
					System.out.print("choice: ");
					choice = sc.nextLine();
					if (choice.equals("1")) {
						if (player1Turn) {
							System.out.println("Player 1's turn!");
							System.out.println("Supply the row, followed by the column of your choice.");
							System.out.print("row: ");
							row = getPos(sc);
							System.out.print("col: ");
							col = getPos(sc);
							isSelectionValid = ticTacToe.setSelection(row, col, 1);
							if (!isSelectionValid) continue;
						}
						else {
							System.out.println("Player 2's turn!");
							System.out.println("Supply the row, followed by the column of your choice.");
							System.out.print("row: ");
							row = getPos(sc);
							System.out.print("col: ");
							col = getPos(sc);
							isSelectionValid = ticTacToe.setSelection(row, col, 2);
							if (!isSelectionValid) continue;
						}
						player1Turn = !player1Turn;
						int winner = ticTacToe.determineWinner();
						if (winner == 1 || winner == 2) {
							System.out.println("\n\n\n\n\nWe have a winner!");
							System.out.println(ticTacToe.getGameDisplay());
							break;
						}
					}
					else if (choice.equals("2")) {
						ticTacToe.resetGame();
						player1Turn = true;
					}
					else if (choice.equals("3")) {
						ticTacToe.quitGame();
						break;
					}
				}
			}
			else if (choice.equals("4")) {
				break;
			}	
		}
	}
	
	public static void main(String[] args) {
		myMain();
	}
	
	public static int getPos(Scanner sc) {
		Integer pos = null;
		while (pos == null) {
			try {
				pos = Integer.valueOf(sc.nextLine());
			}
			catch (NumberFormatException e) {
				System.out.println("That was not a valid position");
				pos = null;
			}
		}
		return pos;
	}
	
}